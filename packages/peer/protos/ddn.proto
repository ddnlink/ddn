// https://github.com/dcodeIO/protobuf.js
// 通过 https://github.com/webpack/webpack 直接打包进程序

syntax = "proto3";

message Block {
  required int32 version = 1;
  required int32 timestamp = 2;
  required string total_amount = 3; //Bignum update      totalAmount
  required string total_fee = 4; //Bignum update int64
  required string reward = 5;   //Bignum update int64
  required int32 number_of_transactions = 6;
  required int32 payload_length = 7;
  required bytes payload_hash = 8;
  required bytes generator_public_key = 9;
  optional bytes block_signature = 10;
  optional string previous_block = 11;
  optional string id = 12;
  optional string height = 13;  //Bignum update     int64
  repeated Transaction transactions = 14;
}

message Transaction {
  required int32 type = 1;
  required int32 timestamp = 2;
  optional string nethash = 3;
  required bytes senderPublicKey = 4;
  required bytes signature = 5;
  optional string recipientId = 6;
  optional string senderId = 7;
  optional string amount = 8;   //Bignum update         int64
  optional string fee = 9;      //Bignum update         int64
  optional bytes requester_public_key = 10;
  optional bytes sign_signature = 11;
  repeated string signatures = 12;
  optional string id = 13;
  optional string height = 14;  //Bignum update         int64
  optional string block_id = 15;
  required Asset asset = 16;
  optional string args = 17;
  optional string message = 18;
}

message Asset {
  oneof derivedAsset {
    AssetTransfer transfer = 1;
    AssetSignature signature = 2;
    AssetDelegate delegate = 3;
    AssetVote vote = 4;
    AssetMultisignature multisignature = 5;
    AssetDApp dapp = 6;
    AssetInTransfer in = 7;
    AssetOutTransfer outTransfer = 8;
    AssetAOBIssuer aobIssuer = 9;
    AssetAOBAsset aobAsset = 10;
    AssetAOBFlags aobFlags = 11;
    AssetAOBAcl aobAcl = 12;
    AssetAOBIssue aobIssue = 13;
    AssetAOBTransfer aobTransfer = 14;
    AssetUserinfo userinfo = 15;
    AssetEvidence evidence = 16;
    DaoOrg daoOrg = 17;
    DaoExchange daoExchange = 18;
    DaoContribution daoContribution = 19;
    DaoConfirmation daoConfirmation = 20;
  }
}

message AssetTransfer {
}

message AssetSignature {
  required bytes publicKey = 1;
}

message AssetDelegate {
  required string username = 1;
  required bytes publicKey = 2;
}

message AssetVote {
  repeated string votes = 1;
}

message AssetMultisignature {
  required int32 min = 1;
  required int32 lifetime = 2;
  repeated string keysgroup = 3;
}

message AssetDApp {
  required int32 category = 1;
  required string name = 2;
  required int32 type = 3;
  required string link = 4;
  optional string description = 5;
  optional string tags = 6;
  optional string icon = 7;
  repeated string delegates = 8;
  required int32 unlock_delegates = 9;
}

message AssetInTransfer {
  required string dapp_id = 1;
  optional string currency = 2;
  optional string amount = 3;
}

message AssetOutTransfer {
  required string dapp_id = 1;
  required string transaction_id = 2;
  optional string currency = 3;
  optional string amount = 4;
}

message AssetAOBIssuer {
  required string name = 1;
  required string desc = 2;
}

message AssetAOBAsset {
  required string name = 1;
  required string desc = 2;
  required string maximum = 3;
  required int32 precision = 4;
  optional string strategy = 5;
  optional int32 allow_writeoff = 6;
  optional int32 allow_whitelist = 7;
  optional int32 allow_blacklist = 8;
}

message AssetAOBFlags {
  required string currency = 1;
  required int32 flag_type = 2;
  required int32 flag = 3;
}

message AssetAOBAcl {
  required string currency = 1;
  required string operator = 2;
  required int32 flag = 3;
  repeated string list = 4;
}

message AssetAOBIssue {
  required string currency = 1;
  required string amount = 2;
}

message AssetAOBTransfer {
  required string currency = 1;
  required string amount = 2;
}

message AssetUserinfo {
  required string username = 1;
}

message AssetEvidence {
  required string ipid = 1;
  required string title = 2;
  optional string description = 3;
  required string hash = 4;
  required string tags = 5;
  required string author = 6;
  required string url = 7;
  optional string size = 8;
  required string type = 9;
}

message BlockPropose {
  required string height = 1;   //Bignum update     int64
  required string id = 2;
  required int32 timestamp = 3;
  required bytes generator_public_key = 4;
  required string address = 5;
  required bytes hash = 6;
  required bytes signature = 7;
}

message BlockVotes {
  required string height = 1;   //Bignum update     int64
  required string id = 2;
  repeated BlockVoteSignature signatures = 3;
}

message BlockVoteSignature {
  required bytes key = 1;
  required bytes sig = 2;
}

message DaoOrg {
  optional string address = 1;
  required string org_id = 2;
  optional string name = 3;
  optional string tags = 4;
  optional string url = 5;
  required int32 state = 6;
}

message DaoExchange {
  required string org_id = 1;
  required string exchange_trs_id = 2;
  required string sender_address = 3;
  required string received_address = 4;
  required string price = 5;
  required int32 state = 6;
}

message DaoConfirmation {
  required string received_address = 1;
  required string sender_address = 2;
  required string contribution_trs_id = 3;
  required int32 state = 4;
  optional string url = 5;
}

message DaoContribution {
  required string title = 1;
  required string received_address = 2;
  required string sender_address = 3;
  required string url = 4;
  optional string price = 5;
}
